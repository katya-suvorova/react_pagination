{"version":3,"sources":["components/Pagination/Pagination.tsx","utils.ts","App.tsx","index.tsx"],"names":["Pagination","pages","currentPage","onPageChange","onPrevPage","onNextPage","className","classNames","disabled","href","onClick","map","page","active","length","getNumbers","from","to","numbers","n","push","items","App","useState","total","perPage","setPerPage","setCurrentPage","Math","ceil","firstItem","lastItem","min","visibleItems","slice","id","value","onChange","event","target","htmlFor","prev","item","ReactDOM","render","document","getElementById"],"mappings":"kNAUaA,EAA8B,SAAC,GAMrC,IALLC,EAKI,EALJA,MACAC,EAII,EAJJA,YACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,WACAC,EACI,EADJA,WAEA,OACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAW,YACxB,CAAEC,SAA0B,IAAhBN,IADd,SAGE,mBACE,UAAQ,WACRI,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBP,EACfQ,QAASN,EALX,oBAWDH,EAAMU,KAAI,SAAAC,GAAI,OACb,oBACEN,UAAWC,IAAW,YACpB,CAAEM,OAAQX,IAAgBU,IAF9B,SAKE,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMP,EAAaS,IAJ9B,SAMGA,KAREA,MAaT,oBACEN,UAAWC,IAAW,YACpB,CAAEC,SAAUN,IAAgBD,EAAMa,SAFtC,SAIE,mBACE,UAAQ,WACRR,UAAU,YACVG,KAAK,QACL,gBAAeP,IAAgBD,EAAMa,OACrCJ,QAASL,EALX,wBCtDD,SAASU,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,ECDT,IAAMG,EAAQN,EAAW,EAAG,IACzBJ,KAAI,SAAAQ,GAAC,qBAAYA,MAEPG,EAAgB,WAC3B,MAAgBC,mBAAS,IAAlBC,EAAP,oBACA,EAA8BD,mBAAS,GAAvC,mBAAOE,EAAP,KAAgBC,EAAhB,KACA,EAAsCH,mBAAS,GAA/C,mBAAOrB,EAAP,KAAoByB,EAApB,KAGM1B,EAAQc,EAAW,EADNa,KAAKC,KAAKL,EAAQC,IAE/BK,GAAa5B,EAAc,GAAKuB,EAChCM,EAAWH,KAAKI,IAAI9B,EAAcuB,EAASD,GAC3CS,EAAeZ,EAAMa,MAAMJ,EAAWC,GAkB5C,OACE,sBAAKzB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWJ,EADX,mBACiC4B,EAAY,EAD7C,cACoDC,EADpD,eACmEP,EADnE,OAIA,sBAAKlB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACR6B,GAAG,kBACH7B,UAAU,eACV8B,MAAOX,EACPY,SAAU,SAACC,GACTZ,GAAYY,EAAMC,OAAOH,OACzBT,EAAe,IAPnB,UAUE,wBAAQS,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkBlC,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEL,MAAOA,EACPC,YAAaA,EACbC,aAnDmB,SAACS,GACxBe,EAAef,IAmDXR,WAhDiB,WACD,IAAhBF,GACFyB,GAAe,SAAAc,GAAI,OAAIA,EAAO,MA+C5BpC,WA3CiB,WACjBH,IAAgBD,EAAMa,QACxBa,GAAe,SAAAc,GAAI,OAAIA,EAAO,QA4C9B,6BACGR,EAAatB,KAAI,SAAA+B,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YC3ElCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.70924d09.chunk.js","sourcesContent":["import classNames from 'classnames';\n\ntype Props = {\n  pages: number[],\n  currentPage: number,\n  onPageChange: (page: number) => void,\n  onPrevPage: () => void,\n  onNextPage: () => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  pages,\n  currentPage,\n  onPageChange,\n  onPrevPage,\n  onNextPage,\n}) => {\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames('page-item',\n        { disabled: currentPage === 1 })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={onPrevPage}\n        >\n          «\n        </a>\n      </li>\n\n      {pages.map(page => (\n        <li\n          className={classNames('page-item',\n            { active: currentPage === page })}\n          key={page}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => onPageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li\n        className={classNames('page-item',\n          { disabled: currentPage === pages.length })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === pages.length}\n          onClick={onNextPage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [total] = useState(42);\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const pagesCount = Math.ceil(total / perPage);\n  const pages = getNumbers(1, pagesCount);\n  const firstItem = (currentPage - 1) * perPage;\n  const lastItem = Math.min(currentPage * perPage, total);\n  const visibleItems = items.slice(firstItem, lastItem);\n\n  const handlePageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  const handlePrevPage = () => {\n    if (currentPage !== 1) {\n      setCurrentPage(prev => prev - 1);\n    }\n  };\n\n  const handleNextPage = () => {\n    if (currentPage !== pages.length) {\n      setCurrentPage(prev => prev + 1);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItem + 1} - ${lastItem} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={(event) => {\n              setPerPage(+event.target.value);\n              setCurrentPage(1);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        pages={pages}\n        currentPage={currentPage}\n        onPageChange={handlePageChange}\n        onPrevPage={handlePrevPage}\n        onNextPage={handleNextPage}\n      />\n\n      <ul>\n        {visibleItems.map(item => (\n          <li data-cy=\"item\" key={item}>{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}